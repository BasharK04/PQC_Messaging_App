// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: envelope.proto
// Protobuf C++ Version: 5.29.3

#ifndef envelope_2eproto_2epb_2eh
#define envelope_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_envelope_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_envelope_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_envelope_2eproto;
class Envelope;
struct EnvelopeDefaultTypeInternal;
extern EnvelopeDefaultTypeInternal _Envelope_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Envelope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Envelope) */ {
 public:
  inline Envelope() : Envelope(nullptr) {}
  ~Envelope() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Envelope* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Envelope));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Envelope(
      ::google::protobuf::internal::ConstantInitialized);

  inline Envelope(const Envelope& from) : Envelope(nullptr, from) {}
  inline Envelope(Envelope&& from) noexcept
      : Envelope(nullptr, std::move(from)) {}
  inline Envelope& operator=(const Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline Envelope& operator=(Envelope&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Envelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const Envelope* internal_default_instance() {
    return reinterpret_cast<const Envelope*>(
        &_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Envelope& a, Envelope& b) { a.Swap(&b); }
  inline void Swap(Envelope* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Envelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Envelope* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Envelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Envelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Envelope& from) { Envelope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Envelope* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Envelope"; }

 protected:
  explicit Envelope(::google::protobuf::Arena* arena);
  Envelope(::google::protobuf::Arena* arena, const Envelope& from);
  Envelope(::google::protobuf::Arena* arena, Envelope&& from) noexcept
      : Envelope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kToUsernameFieldNumber = 2,
    kSenderPubkeyFieldNumber = 3,
    kPayloadE2EFieldNumber = 4,
    kClientTimestampFieldNumber = 5,
    kVersionFieldNumber = 1,
  };
  // string to_username = 2;
  void clear_to_username() ;
  const std::string& to_username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_username(Arg_&& arg, Args_... args);
  std::string* mutable_to_username();
  PROTOBUF_NODISCARD std::string* release_to_username();
  void set_allocated_to_username(std::string* value);

  private:
  const std::string& _internal_to_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_username(
      const std::string& value);
  std::string* _internal_mutable_to_username();

  public:
  // bytes sender_pubkey = 3;
  void clear_sender_pubkey() ;
  const std::string& sender_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_sender_pubkey();
  PROTOBUF_NODISCARD std::string* release_sender_pubkey();
  void set_allocated_sender_pubkey(std::string* value);

  private:
  const std::string& _internal_sender_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender_pubkey(
      const std::string& value);
  std::string* _internal_mutable_sender_pubkey();

  public:
  // bytes payload_e2e = 4;
  void clear_payload_e2e() ;
  const std::string& payload_e2e() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload_e2e(Arg_&& arg, Args_... args);
  std::string* mutable_payload_e2e();
  PROTOBUF_NODISCARD std::string* release_payload_e2e();
  void set_allocated_payload_e2e(std::string* value);

  private:
  const std::string& _internal_payload_e2e() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload_e2e(
      const std::string& value);
  std::string* _internal_mutable_payload_e2e();

  public:
  // int64 client_timestamp = 5;
  void clear_client_timestamp() ;
  ::int64_t client_timestamp() const;
  void set_client_timestamp(::int64_t value);

  private:
  ::int64_t _internal_client_timestamp() const;
  void _internal_set_client_timestamp(::int64_t value);

  public:
  // uint32 version = 1;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Envelope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      28, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Envelope& from_msg);
    ::google::protobuf::internal::ArenaStringPtr to_username_;
    ::google::protobuf::internal::ArenaStringPtr sender_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr payload_e2e_;
    ::int64_t client_timestamp_;
    ::uint32_t version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_envelope_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Envelope

// uint32 version = 1;
inline void Envelope::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t Envelope::version() const {
  // @@protoc_insertion_point(field_get:Envelope.version)
  return _internal_version();
}
inline void Envelope::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:Envelope.version)
}
inline ::uint32_t Envelope::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void Envelope::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// string to_username = 2;
inline void Envelope::clear_to_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_username_.ClearToEmpty();
}
inline const std::string& Envelope::to_username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Envelope.to_username)
  return _internal_to_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Envelope::set_to_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Envelope.to_username)
}
inline std::string* Envelope::mutable_to_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_username();
  // @@protoc_insertion_point(field_mutable:Envelope.to_username)
  return _s;
}
inline const std::string& Envelope::_internal_to_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_username_.Get();
}
inline void Envelope::_internal_set_to_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_username_.Set(value, GetArena());
}
inline std::string* Envelope::_internal_mutable_to_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_username_.Mutable( GetArena());
}
inline std::string* Envelope::release_to_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Envelope.to_username)
  return _impl_.to_username_.Release();
}
inline void Envelope::set_allocated_to_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_username_.IsDefault()) {
    _impl_.to_username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Envelope.to_username)
}

// bytes sender_pubkey = 3;
inline void Envelope::clear_sender_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_pubkey_.ClearToEmpty();
}
inline const std::string& Envelope::sender_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Envelope.sender_pubkey)
  return _internal_sender_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Envelope::set_sender_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Envelope.sender_pubkey)
}
inline std::string* Envelope::mutable_sender_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender_pubkey();
  // @@protoc_insertion_point(field_mutable:Envelope.sender_pubkey)
  return _s;
}
inline const std::string& Envelope::_internal_sender_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_pubkey_.Get();
}
inline void Envelope::_internal_set_sender_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_pubkey_.Set(value, GetArena());
}
inline std::string* Envelope::_internal_mutable_sender_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_pubkey_.Mutable( GetArena());
}
inline std::string* Envelope::release_sender_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Envelope.sender_pubkey)
  return _impl_.sender_pubkey_.Release();
}
inline void Envelope::set_allocated_sender_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_pubkey_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_pubkey_.IsDefault()) {
    _impl_.sender_pubkey_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Envelope.sender_pubkey)
}

// bytes payload_e2e = 4;
inline void Envelope::clear_payload_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_e2e_.ClearToEmpty();
}
inline const std::string& Envelope::payload_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Envelope.payload_e2e)
  return _internal_payload_e2e();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Envelope::set_payload_e2e(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_e2e_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Envelope.payload_e2e)
}
inline std::string* Envelope::mutable_payload_e2e() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload_e2e();
  // @@protoc_insertion_point(field_mutable:Envelope.payload_e2e)
  return _s;
}
inline const std::string& Envelope::_internal_payload_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_e2e_.Get();
}
inline void Envelope::_internal_set_payload_e2e(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_e2e_.Set(value, GetArena());
}
inline std::string* Envelope::_internal_mutable_payload_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_e2e_.Mutable( GetArena());
}
inline std::string* Envelope::release_payload_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Envelope.payload_e2e)
  return _impl_.payload_e2e_.Release();
}
inline void Envelope::set_allocated_payload_e2e(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_e2e_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_e2e_.IsDefault()) {
    _impl_.payload_e2e_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Envelope.payload_e2e)
}

// int64 client_timestamp = 5;
inline void Envelope::clear_client_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_timestamp_ = ::int64_t{0};
}
inline ::int64_t Envelope::client_timestamp() const {
  // @@protoc_insertion_point(field_get:Envelope.client_timestamp)
  return _internal_client_timestamp();
}
inline void Envelope::set_client_timestamp(::int64_t value) {
  _internal_set_client_timestamp(value);
  // @@protoc_insertion_point(field_set:Envelope.client_timestamp)
}
inline ::int64_t Envelope::_internal_client_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_timestamp_;
}
inline void Envelope::_internal_set_client_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_timestamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // envelope_2eproto_2epb_2eh
