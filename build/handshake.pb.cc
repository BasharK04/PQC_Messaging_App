// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: handshake.proto
// Protobuf C++ Version: 5.29.3

#include "handshake.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr HandshakeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kem_ciphertext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_pub_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_sig_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeResponse::HandshakeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeResponseDefaultTypeInternal() {}
  union {
    HandshakeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeResponseDefaultTypeInternal _HandshakeResponse_default_instance_;

inline constexpr HandshakeHello::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kem_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_pub_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_sig_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandshakeHello::HandshakeHello(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeHelloDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeHelloDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeHelloDefaultTypeInternal() {}
  union {
    HandshakeHello _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeHelloDefaultTypeInternal _HandshakeHello_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_handshake_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_handshake_2eproto = nullptr;
const ::uint32_t
    TableStruct_handshake_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::HandshakeHello, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HandshakeHello, _impl_.kem_public_key_),
        PROTOBUF_FIELD_OFFSET(::HandshakeHello, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::HandshakeHello, _impl_.identity_pub_),
        PROTOBUF_FIELD_OFFSET(::HandshakeHello, _impl_.identity_sig_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _impl_.kem_ciphertext_),
        PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _impl_.identity_pub_),
        PROTOBUF_FIELD_OFFSET(::HandshakeResponse, _impl_.identity_sig_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::HandshakeHello)},
        {12, -1, -1, sizeof(::HandshakeResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_HandshakeHello_default_instance_._instance,
    &::_HandshakeResponse_default_instance_._instance,
};
const char descriptor_table_protodef_handshake_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017handshake.proto\"e\n\016HandshakeHello\022\026\n\016k"
    "em_public_key\030\001 \001(\014\022\017\n\007version\030\002 \001(\r\022\024\n\014"
    "identity_pub\030\003 \001(\014\022\024\n\014identity_sig\030\004 \001(\014"
    "\"h\n\021HandshakeResponse\022\026\n\016kem_ciphertext\030"
    "\001 \001(\014\022\017\n\007version\030\002 \001(\r\022\024\n\014identity_pub\030\003"
    " \001(\014\022\024\n\014identity_sig\030\004 \001(\014b\006proto3"
};
static ::absl::once_flag descriptor_table_handshake_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_handshake_2eproto = {
    false,
    false,
    234,
    descriptor_table_protodef_handshake_2eproto,
    "handshake.proto",
    &descriptor_table_handshake_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_handshake_2eproto::offsets,
    file_level_enum_descriptors_handshake_2eproto,
    file_level_service_descriptors_handshake_2eproto,
};
// ===================================================================

class HandshakeHello::_Internal {
 public:
};

HandshakeHello::HandshakeHello(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HandshakeHello)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeHello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HandshakeHello& from_msg)
      : kem_public_key_(arena, from.kem_public_key_),
        identity_pub_(arena, from.identity_pub_),
        identity_sig_(arena, from.identity_sig_),
        _cached_size_{0} {}

HandshakeHello::HandshakeHello(
    ::google::protobuf::Arena* arena,
    const HandshakeHello& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandshakeHello* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:HandshakeHello)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeHello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kem_public_key_(arena),
        identity_pub_(arena),
        identity_sig_(arena),
        _cached_size_{0} {}

inline void HandshakeHello::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
HandshakeHello::~HandshakeHello() {
  // @@protoc_insertion_point(destructor:HandshakeHello)
  SharedDtor(*this);
}
inline void HandshakeHello::SharedDtor(MessageLite& self) {
  HandshakeHello& this_ = static_cast<HandshakeHello&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.kem_public_key_.Destroy();
  this_._impl_.identity_pub_.Destroy();
  this_._impl_.identity_sig_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HandshakeHello::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HandshakeHello(arena);
}
constexpr auto HandshakeHello::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HandshakeHello),
                                            alignof(HandshakeHello));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HandshakeHello::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HandshakeHello_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HandshakeHello::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HandshakeHello>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HandshakeHello::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HandshakeHello>(), &HandshakeHello::ByteSizeLong,
            &HandshakeHello::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_._cached_size_),
        false,
    },
    &HandshakeHello::kDescriptorMethods,
    &descriptor_table_handshake_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HandshakeHello::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> HandshakeHello::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HandshakeHello>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes identity_sig = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.identity_sig_)}},
    // bytes kem_public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.kem_public_key_)}},
    // uint32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeHello, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.version_)}},
    // bytes identity_pub = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.identity_pub_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes kem_public_key = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.kem_public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 version = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes identity_pub = 3;
    {PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.identity_pub_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes identity_sig = 4;
    {PROTOBUF_FIELD_OFFSET(HandshakeHello, _impl_.identity_sig_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeHello::Clear() {
// @@protoc_insertion_point(message_clear_start:HandshakeHello)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kem_public_key_.ClearToEmpty();
  _impl_.identity_pub_.ClearToEmpty();
  _impl_.identity_sig_.ClearToEmpty();
  _impl_.version_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandshakeHello::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandshakeHello& this_ = static_cast<const HandshakeHello&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandshakeHello::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandshakeHello& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:HandshakeHello)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes kem_public_key = 1;
          if (!this_._internal_kem_public_key().empty()) {
            const std::string& _s = this_._internal_kem_public_key();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint32 version = 2;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_version(), target);
          }

          // bytes identity_pub = 3;
          if (!this_._internal_identity_pub().empty()) {
            const std::string& _s = this_._internal_identity_pub();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes identity_sig = 4;
          if (!this_._internal_identity_sig().empty()) {
            const std::string& _s = this_._internal_identity_sig();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:HandshakeHello)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandshakeHello::ByteSizeLong(const MessageLite& base) {
          const HandshakeHello& this_ = static_cast<const HandshakeHello&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandshakeHello::ByteSizeLong() const {
          const HandshakeHello& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:HandshakeHello)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes kem_public_key = 1;
            if (!this_._internal_kem_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_kem_public_key());
            }
            // bytes identity_pub = 3;
            if (!this_._internal_identity_pub().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_identity_pub());
            }
            // bytes identity_sig = 4;
            if (!this_._internal_identity_sig().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_identity_sig());
            }
            // uint32 version = 2;
            if (this_._internal_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandshakeHello::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeHello*>(&to_msg);
  auto& from = static_cast<const HandshakeHello&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HandshakeHello)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_kem_public_key().empty()) {
    _this->_internal_set_kem_public_key(from._internal_kem_public_key());
  }
  if (!from._internal_identity_pub().empty()) {
    _this->_internal_set_identity_pub(from._internal_identity_pub());
  }
  if (!from._internal_identity_sig().empty()) {
    _this->_internal_set_identity_sig(from._internal_identity_sig());
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeHello::CopyFrom(const HandshakeHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HandshakeHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeHello::InternalSwap(HandshakeHello* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.kem_public_key_, &other->_impl_.kem_public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_pub_, &other->_impl_.identity_pub_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_sig_, &other->_impl_.identity_sig_, arena);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata HandshakeHello::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandshakeResponse::_Internal {
 public:
};

HandshakeResponse::HandshakeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HandshakeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HandshakeResponse& from_msg)
      : kem_ciphertext_(arena, from.kem_ciphertext_),
        identity_pub_(arena, from.identity_pub_),
        identity_sig_(arena, from.identity_sig_),
        _cached_size_{0} {}

HandshakeResponse::HandshakeResponse(
    ::google::protobuf::Arena* arena,
    const HandshakeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandshakeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:HandshakeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandshakeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kem_ciphertext_(arena),
        identity_pub_(arena),
        identity_sig_(arena),
        _cached_size_{0} {}

inline void HandshakeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
HandshakeResponse::~HandshakeResponse() {
  // @@protoc_insertion_point(destructor:HandshakeResponse)
  SharedDtor(*this);
}
inline void HandshakeResponse::SharedDtor(MessageLite& self) {
  HandshakeResponse& this_ = static_cast<HandshakeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.kem_ciphertext_.Destroy();
  this_._impl_.identity_pub_.Destroy();
  this_._impl_.identity_sig_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HandshakeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HandshakeResponse(arena);
}
constexpr auto HandshakeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HandshakeResponse),
                                            alignof(HandshakeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HandshakeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HandshakeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HandshakeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HandshakeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HandshakeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HandshakeResponse>(), &HandshakeResponse::ByteSizeLong,
            &HandshakeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_._cached_size_),
        false,
    },
    &HandshakeResponse::kDescriptorMethods,
    &descriptor_table_handshake_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HandshakeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> HandshakeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HandshakeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes identity_sig = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.identity_sig_)}},
    // bytes kem_ciphertext = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.kem_ciphertext_)}},
    // uint32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandshakeResponse, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.version_)}},
    // bytes identity_pub = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.identity_pub_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes kem_ciphertext = 1;
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.kem_ciphertext_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 version = 2;
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes identity_pub = 3;
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.identity_pub_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes identity_sig = 4;
    {PROTOBUF_FIELD_OFFSET(HandshakeResponse, _impl_.identity_sig_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandshakeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HandshakeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kem_ciphertext_.ClearToEmpty();
  _impl_.identity_pub_.ClearToEmpty();
  _impl_.identity_sig_.ClearToEmpty();
  _impl_.version_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandshakeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandshakeResponse& this_ = static_cast<const HandshakeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandshakeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandshakeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:HandshakeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes kem_ciphertext = 1;
          if (!this_._internal_kem_ciphertext().empty()) {
            const std::string& _s = this_._internal_kem_ciphertext();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint32 version = 2;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_version(), target);
          }

          // bytes identity_pub = 3;
          if (!this_._internal_identity_pub().empty()) {
            const std::string& _s = this_._internal_identity_pub();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes identity_sig = 4;
          if (!this_._internal_identity_sig().empty()) {
            const std::string& _s = this_._internal_identity_sig();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:HandshakeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandshakeResponse::ByteSizeLong(const MessageLite& base) {
          const HandshakeResponse& this_ = static_cast<const HandshakeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandshakeResponse::ByteSizeLong() const {
          const HandshakeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:HandshakeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes kem_ciphertext = 1;
            if (!this_._internal_kem_ciphertext().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_kem_ciphertext());
            }
            // bytes identity_pub = 3;
            if (!this_._internal_identity_pub().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_identity_pub());
            }
            // bytes identity_sig = 4;
            if (!this_._internal_identity_sig().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_identity_sig());
            }
            // uint32 version = 2;
            if (this_._internal_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandshakeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandshakeResponse*>(&to_msg);
  auto& from = static_cast<const HandshakeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HandshakeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_kem_ciphertext().empty()) {
    _this->_internal_set_kem_ciphertext(from._internal_kem_ciphertext());
  }
  if (!from._internal_identity_pub().empty()) {
    _this->_internal_set_identity_pub(from._internal_identity_pub());
  }
  if (!from._internal_identity_sig().empty()) {
    _this->_internal_set_identity_sig(from._internal_identity_sig());
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeResponse::CopyFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandshakeResponse::InternalSwap(HandshakeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.kem_ciphertext_, &other->_impl_.kem_ciphertext_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_pub_, &other->_impl_.identity_pub_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_sig_, &other->_impl_.identity_sig_, arena);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata HandshakeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_handshake_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
